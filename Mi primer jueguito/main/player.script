local speed = 100 -- Velocidad de movimiento

local function play_animation(self, anim)
	if self.current_anim ~= anim then
		msg.post("#sprite", "play_animation", { id = hash(anim) })
		self.current_anim = anim
	end
end

function init(self)
	self.velocity = vmath.vector3()
	self.current_anim = nil
	msg.post(".", "acquire_input_focus")  -- El punto (.) significa "este game object"
end

function update(self, dt)
	local pos = go.get_position()
	pos = pos + self.velocity * dt
	go.set_position(pos)   

	-- Si no hay movimiento (velocidad = 0)
	if self.velocity.x == 0 and self.velocity.y == 0 then
		-- Mantener la última animación pero en versión "idle"
		if self.current_anim == "walk_right" then
			play_animation(self, "idle_right")
		elseif self.current_anim == "walk_left" then
			play_animation(self, "idle_left")
		elseif self.current_anim == "walk_up" then
			play_animation(self, "idle_up")
		elseif self.current_anim == "walk_down" then
			play_animation(self, "idle_down")
		end
	else
		-- Si hay movimiento, animación normal
		if self.velocity.x > 0 then
			play_animation(self, "walk_right")
		elseif self.velocity.x < 0 then
			play_animation(self, "walk_left")
		elseif self.velocity.y > 0 then
			play_animation(self, "walk_up")
		elseif self.velocity.y < 0 then
			play_animation(self, "walk_down")
		end
	end
end

function on_input(self, action_id, action)
	if action_id == hash("up") then
		self.velocity.y = action.pressed and speed or (action.released and 0 or self.velocity.y)
	elseif action_id == hash("down") then
		self.velocity.y = action.pressed and -speed or (action.released and 0 or self.velocity.y)
	elseif action_id == hash("left") then
		self.velocity.x = action.pressed and -speed or (action.released and 0 or self.velocity.x)
	elseif action_id == hash("right") then
		self.velocity.x = action.pressed and speed or (action.released and 0 or self.velocity.x)
	else

	end
end